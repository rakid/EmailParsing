name: Code Quality

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: "0 2 * * 0"

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy bandit safety vulture

      - name: Run Black (Code formatting)
        run: |
          black --check --diff src/ tests/

      - name: Run isort (Import sorting)
        run: |
          isort --check-only --diff src/ tests/

      - name: Run flake8 (Linting)
        run: |
          flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503,E501

      - name: Run mypy (Type checking)
        run: |
          mypy src/ --ignore-missing-imports --strict-optional
        continue-on-error: true

      - name: Run Bandit (Security linting)
        run: |
          bandit -r src/ -f json -o bandit-results.json
        continue-on-error: true

      - name: Run Safety (Dependency vulnerability check)
        run: |
          safety check --json --output safety-results.json
        continue-on-error: true

      - name: Run Vulture (Dead code detection)
        run: |
          vulture src/ --exclude="*/__pycache__" --min-confidence 80
        continue-on-error: true

      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-results
          path: |
            bandit-results.json
            safety-results.json

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies and run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pytest tests/ --cov=src --cov-report=xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
